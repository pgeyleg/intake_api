version: '2'

volumes:
  webroot:
    driver: local
  tmp:
    driver: local

services:
  elasticsearch:
    build:
      context: ../
      dockerfile: common/Dockerfile.elasticsearch
  postgres:
    build:
      context: ../
      dockerfile: common/Dockerfile.postgres
  app:
    build:
      context: ../../
      dockerfile: docker/release/Dockerfile
    volumes:
      - webroot:/intake_api_prototype/public
      - tmp:/tmp
    environment:
      AUTHENTICATION_URL: 'http://www.example.com/'
      AUTHENTICATION: 'false'
      SECRET_KEY_BASE: bmcE7qdwemQrhf6NJR6OUlq05iqYH/fSXd1NT/aIdBI=
      RAILS_ENV: production
      PG_HOST: postgres
      PG_USER: postgres
      ELASTICSEARCH_URL: 'http://elasticsearch:9200'
    command:
      - bundle
      - exec
      - puma
      - -v
      - -b
      - unix:///tmp/app.sock
  nginx:
    image: 334274607422.dkr.ecr.us-east-1.amazonaws.com/casecommons/nginx
    ports:
      - "${HTTP_PORT}"
    environment:
      HTTP_PORT: ${HTTP_PORT}
      WEB_ROOT: /intake_api_prototype/public
      UPSTREAM_URL: unix:///tmp/app.sock
      HEALTHCHECK: curl -fs localhost:${HTTP_PORT}/api/v1/screenings
    volumes:
      - webroot:/intake_api_prototype/public
      - tmp:/tmp
